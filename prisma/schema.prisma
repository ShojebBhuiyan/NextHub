// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

// enum Skills {
//   HTML
//   CSS
//   JavaScript
//   TypeScript
//   React
//   Angular
//   Vue
//   Node
//   Express
//   Nest
//   Prisma
//   PostgreSQL
//   MySQL
//   MongoDB
//   GraphQL
//   REST
//   AWS
//   Azure
//   GCP
//   Docker
//   Kubernetes
//   Jenkins
//   CircleCI
//   TravisCI
// }

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  password      String?
  image         String?
  accounts      Account[]
}

// model Project {
//   id          String   @id @default(uuid())
//   title       String
//   description String
//   skills      String[]
//   user        User     @relation(fields: [userId], references: [id])
//   userId      String
//   files       File[]
//   createdAt   DateTime @default(now())
//   updatedAt   DateTime @updatedAt
// }

// model File {
//   id        String   @id @default(uuid())
//   name      String
//   url       String
//   projectId String
//   project   Project  @relation(fields: [projectId], references: [id])
//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt
// }
